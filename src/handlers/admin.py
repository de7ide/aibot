from aiogram import F, Router
from aiogram.types import Message, CallbackQuery, ReplyKeyboardRemove
from aiogram.filters import Command, StateFilter, or_f
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from sqlalchemy.ext.asyncio import AsyncSession
from database.orm_query import Database
from filter.admin import IsAdmin


admin_router = Router()
admin_router.message.filter(IsAdmin())


class EditMess(StatesGroup):
    waiting_for_text = State()
    wait_for_anal = State()


@admin_router.message(Command('get_users'))
async def get_users(message: Message, db: Database):
    users = await db.get_all_users()
    stats_text = "\n".join([f"@{user.username}: {user.count_token_used} –∑–∞–ø—Ä–æ—Å" for user in users])
    await message.answer(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n{stats_text}")



@admin_router.message(Command("set_start"))
async def set_start_handler(message: Message, state: FSMContext):
    """–ó–∞–ø—É—Å–∫ FSM –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ /start"""

    await state.set_state(EditMess.waiting_for_text)
    await message.answer("‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è /start:")


@admin_router.message(EditMess.waiting_for_text)
async def process_new_start_text(message: Message, state: FSMContext, db: Database):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–µ–∫—Å—Ç–∞, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ë–î –∏ –≤—ã—Ö–æ–¥ –∏–∑ FSM"""
    new_text = message.text.strip()

    await db.update_start_message(new_message=new_text)

    await state.clear()
    await message.answer("‚úÖ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!")


@admin_router.message(Command("set_message"))
async def set_anal_handler(message: Message, state: FSMContext):
    """–ó–∞–ø—É—Å–∫ FSM –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ /start"""

    await state.set_state(EditMess.wait_for_anal)
    await message.answer("‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–¥ –∞–Ω–∞–ª–∏–∑–æ–º...")


@admin_router.message(EditMess.wait_for_anal)
async def set_anal_mess(message: Message, state: FSMContext, db: Database):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–µ–∫—Å—Ç–∞, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ë–î –∏ –≤—ã—Ö–æ–¥ –∏–∑ FSM"""
    new_text = message.text.strip()

    await db.update_analysis_message(new_message=new_text)

    await state.clear()
    await message.answer("‚úÖ C–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –∞–Ω–∞–ª–∏–∑–æ–º —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!")